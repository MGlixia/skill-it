## Table of Contents
1. [Introduction](#introduction)
2. [Getting Started](#getting-started)
3. [Current Project](#current-project)
4. [Terminology](#terminology)
5. [Setting Up Ubuntu on Windows](#setting-up-ubuntu-on-windows)
   - [Tools Used](#tools-used)
   - [Steps](#steps)
   - [Issues and Solutions](#issues-and-solutions)
6. [Learning and Using GitHub](#learning-and-using-github)
   - [Steps Taken](#steps-taken)
   - [Commands and Methods](#commands-and-methods)
   - [Issues and Solutions](#issues-and-solutions-1)
7. [Ongoing Projects and Learning](#ongoing-projects-and-learning)
   - [Current Focus](#current-focus)
   - [Projects](#projects)
8. [Document Structure Example](#document-structure-example)
9. [How to Navigate This Document](#how-to-navigate-this-document)

## 1. Introduction
**This section is dedicated to documenting my learning journey and the steps Iâ€™ve taken to master new technologies.**

## 2. Getting Started
- **Installed Ubuntu on Windows using WSL.**
- **Created this repository to document my progress.**

## 3. Current Project
- **Setting up a personal website using GitHub Pages.**

## 4. Terminology
- **Repository:** Your project (like an album in BandLab)
- **Commit:** Saving changes (like saving a new version of your song)
- **Branch:** Different versions of your project (like different mixes or edits of a song)
- **Pull Request:** Proposing changes to be added to the main project (like asking a collaborator for feedback on your mix)

## 5. Setting Up Ubuntu on Windows

### 5.1 Tools Used
- **Windows Subsystem for Linux (WSL)**
- **VirtualBox**

### 5.2 Steps
1. **Enable WSL:**
   ```bash
   dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
   ```
2. **Install Ubuntu from Microsoft Store:**
   - **Go to the Microsoft Store and search for "Ubuntu."**
   - **Click on "Install" to get the latest version.**
3. **Initialize Ubuntu:**
   - **Open Ubuntu from the Start menu.**
   - **Set up your username and password.**
   
### 5.3 Issues and Solutions
- **Issue:** Network connectivity problems.
  **Solution:** Configured network settings in Windows and WSL.

## 6. Learning and Using GitHub

### 6.1 Steps Taken
1. **Creating a GitHub Account:**
   - **Signed up at [GitHub](https://github.com/).**
2. **Creating a Repository:**
   - **Clicked on "New" to create a new repository named "skill-it."**
   - **Made it public to avoid charges.**
   
### 6.2 Commands and Methods
- **Cloning a Repository:**
  ```bash
  git clone https://github.com/<your-username>/skill-it.git
  ```
- **Adding Files:**
  ```bash
  git add .
  git commit -m "Initial commit"
  git push origin main
  ```

### 6.3 Issues and Solutions
- **Issue:** Understanding Git commands.
  **Solution:** Referred to the official [Git documentation](https://git-scm.com/doc).

## 7. Ongoing Projects and Learning

### 7.1 Current Focus
- **Completing the LFS101 course by Linux Foundation.**
- **Practicing Linux commands and scripting.**

### 7.2 Projects
- **Project 1:** Setting up a personal website using GitHub Pages.
- **Project 2:** Automating tasks with shell scripts.

## 8. Document Structure Example
**Here's an example structure to guide how I document each step and project:**

```markdown
# Example Project Documentation
## Description
**A brief overview of the project and its objectives.**

## Objectives
- **List the goals of the project.**

## Steps Taken
1. **Step 1:** Detailed explanation of the step.
2. **Step 2:** Detailed explanation of the next step.

## Lessons Learned
- **Summary of what was learned and any challenges faced.**

## Issues and Solutions
- **Issue:** Description of the issue.
  **Solution:** Explanation of how the issue was resolved.
```

## 9. How to Navigate This Document
This section provides tips on how to efficiently navigate and edit this document, especially useful for large repositories:
- **Line Numbers:** Use line numbers in your text editor to quickly locate specific sections.
- **Go to Line:** In editors like VS Code, press `Ctrl + G` (Windows/Linux) or `Cmd + G` (Mac) to jump to a specific line.
- **Search Function:** Use `Ctrl + F` (Windows/Linux) or `Cmd + F` (Mac) to search for text within the document.
- **Permalinks on GitHub:** Click on the line number in GitHub to get a permalink directly to that line.
- **Browser Extensions:** Consider using extensions like Octotree for a file tree view in GitHub.

---

### Branching Strategy for Your Commit:
For making changes to your repository, you have two options:

1. **Main Branch:**
   - Directly committing to the main branch is straightforward for minor edits or personal repositories where you don't need approval from others.

2. **New Branch:**
   - Creating a new branch is advisable for significant changes, especially if you want to review the changes before merging them into the main branch.

### Creating a New Branch and Committing Changes:
1. **Create a New Branch:**
   ```bash
   git checkout -b new-branch-name
   ```

2. **Add Your Changes:**
   ```bash
   git add .
   git commit -m "Added navigation information and other changes"
   ```

3. **Push the New Branch:**
   ```bash
   git push origin new-branch-name
   ```

4. **Open a Pull Request:** (optional but recommended)
   - Go to your repository on GitHub and open a pull request to merge your new branch into the main branch.




